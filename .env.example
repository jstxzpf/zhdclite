# ========================================
# 家庭数据系统 Docker 环境变量配置模板
# 支持多阶段构建和镜像仓库管理
# ========================================
# 复制此文件为 .env 并填入实际配置值

# ========================================
# 多阶段构建配置
# ========================================
# 镜像版本标签
VERSION=latest

# 镜像仓库地址 (可选，用于推送镜像)
# REGISTRY_URL=your-registry.com

# 基础镜像名称
BASE_IMAGE_NAME=household-data-system-base

# 应用镜像名称
APP_IMAGE_NAME=household-data-system-app

# ========================================
# Flask 应用配置
# ========================================
FLASK_ENV=production
FLASK_APP=app.py
FLASK_RUN_HOST=0.0.0.0
FLASK_RUN_PORT=5000

# 日志级别 (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# 文件上传限制 (字节，默认16MB)
MAX_CONTENT_LENGTH=16777216

# ========================================
# 内部数据库配置 (主数据库)
# ========================================
# 数据库驱动
DB_DRIVER=ODBC Driver 18 for SQL Server

# 数据库服务器地址
DB_SERVER=your-internal-db-server.com

# 数据库名称
DB_DATABASE=hhgzhdc

# 数据库用户名
DB_UID=sa

# 数据库密码 (必须设置)
DB_PWD=your-secure-password

# 是否启用加密连接
DB_ENCRYPT=yes

# 是否信任服务器证书
DB_TRUST_CERT=yes

# ========================================
# 外部数据库配置 (同步数据库)
# ========================================
# 外部数据库驱动
EXTERNAL_DB_DRIVER=ODBC Driver 18 for SQL Server

# 外部数据库服务器地址
EXTERNAL_DB_SERVER=your-external-db-server.com

# 外部数据库名称
EXTERNAL_DB_DATABASE=external_hhgzhdc

# 外部数据库用户名
EXTERNAL_DB_UID=sa

# 外部数据库密码 (必须设置)
EXTERNAL_DB_PWD=your-external-secure-password

# 外部数据库是否启用加密连接
EXTERNAL_DB_ENCRYPT=yes

# 外部数据库是否信任服务器证书
EXTERNAL_DB_TRUST_CERT=yes

# ========================================
# 容器化数据库配置 (可选)
# ========================================
# 如果使用 docker-compose 中的 SQL Server 容器，取消注释以下配置

# 容器数据库SA密码 (必须符合SQL Server密码策略)
# CONTAINER_DB_SA_PASSWORD=YourStrong!Passw0rd

# SQL Server 版本 (Express, Developer, Standard, Enterprise)
# MSSQL_PID=Express

# ========================================
# 网络和安全配置
# ========================================
# Docker网络子网 (默认: 172.20.0.0/16)
DOCKER_SUBNET=172.20.0.0/16

# 应用端口映射 (主机端口:容器端口)
APP_PORT_MAPPING=5000:5000

# 数据库端口映射 (如果使用容器化数据库)
# DB_PORT_MAPPING=1433:1433

# ========================================
# 存储和备份配置
# ========================================
# 上传文件存储路径 (主机路径)
UPLOADS_HOST_PATH=./uploads

# 日志文件存储路径 (主机路径)
LOGS_HOST_PATH=./logs

# 配置文件路径 (主机路径)
CONFIG_HOST_PATH=./config

# SQL脚本路径 (主机路径)
SQL_HOST_PATH=./sql

# ========================================
# 性能和资源配置
# ========================================
# 内存限制 (例如: 1G, 512M)
MEMORY_LIMIT=1G

# CPU限制 (例如: 0.5, 1.0)
CPU_LIMIT=0.5

# 内存预留 (例如: 512M, 256M)
MEMORY_RESERVATION=512M

# CPU预留 (例如: 0.25, 0.5)
CPU_RESERVATION=0.25

# ========================================
# 健康检查配置
# ========================================
# 健康检查间隔 (秒)
HEALTHCHECK_INTERVAL=30

# 健康检查超时 (秒)
HEALTHCHECK_TIMEOUT=10

# 健康检查重试次数
HEALTHCHECK_RETRIES=3

# 健康检查启动等待时间 (秒)
HEALTHCHECK_START_PERIOD=40

# ========================================
# 开发和调试配置 (生产环境请保持注释)
# ========================================
# 开发模式 (取消注释启用开发模式)
# FLASK_ENV=development
# FLASK_DEBUG=1

# 详细日志 (取消注释启用详细日志)
# LOG_LEVEL=DEBUG

# ========================================
# 示例配置说明
# ========================================
# 1. 复制此文件为 .env: cp .env.example .env
# 2. 编辑 .env 文件，填入实际的配置值
# 3. 确保数据库密码符合安全要求
# 4. 根据实际网络环境调整服务器地址
# 5. 根据服务器性能调整资源限制
